/*
 * File: app/controller/Account.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Exxica.controller.Account', {
    extend: 'Ext.app.Controller',

    config: {
        models: [
            'User',
            'Lead'
        ],
        stores: [
            'Account',
            'Leads'
        ],
        views: [
            'LoginForm'
        ],

        refs: {
            mainView: 'mainview',
            loginForm: 'loginform',
            leads: 'list#leadsList',
            loginButton: 'loginform #loginButton',
            loginSuccess: 'container#loginSuccess',
            leadsContainer: 'container#leadsContainer'
        },

        control: {
            "loginform #loginButton": {
                tap: 'login'
            }
        }
    },

    login: function(button, e, eOpts) {
        var me = this;
        var form = me.getLoginForm(),
            values = form.getValues(),
            loginBtn = me.getLoginButton(),
            loginSuccess = me.getLoginSuccess();

        // Success
        var successCallback = function(resp, ops) {
            var xhr = Ext.JSON.decode(resp.responseText);
            var data = xhr.data;

            if(xhr.success) {
                form.hide();
                loginSuccess.show();
                var accountStore = Ext.getStore('Account');
                var User = Ext.ModelMgr.getModel('Exxica.model.User');
                var account = Ext.create(User, {
                    controlKey: data._c,
                    idCompany: data.company_id,
                    idUser: data.user_id,
                    idLicence: data.licence_id,
                    language: data.language
                });
                accountStore.add(account);

                var leadsStore = Ext.getStore('Leads');

                leadsStore.getProxy().setExtraParams({
                    '_c': account.get('controlKey'),
                    'licenceid': account.get('idLicence'),
                    'userid': account.get('idUser'),
                    'companyid': account.get('idCompany'),
                    'isBin': false
                });
                leadsStore.load({
                    callback: function(records, options, success) {
                        if(success) {
                            var container = me.getLeadsContainer();
                            container.show();
                            loginSuccess.hide();
                        } else {
                            loginBtn.setDisabled(false);
                            Ext.MsgBox.alert("Login failed", "An unspecified error occurred.");
                        }
                    }
                });
            } else {
                alert('Error', xhr.error);
                loginBtn.setDisabled(false);
            }
        };

        // Failure
        var failureCallback = function(resp, ops) {
            var xhr = Ext.JSON.decode(resp.responseText);

            loginBtn.setDisabled(false);

            Ext.MsgBox.alert("Login failed", xhr.data.message);
        };

        loginBtn.setDisabled(true);
        Ext.Ajax.request({
            url: "http://cloud.exxica.com/api/index.php?r=mobile/login",
            params: values,
            success: successCallback,
            failure: failureCallback,
            withCredentials: true,
            useDefaultXhrHeader: false
        });
    }

});